166
<classHistory><id hierarchicalHash="ccfe9b44"><classId hash="3439237956"><name><name>nl/basjes/parse/useragent/utils/Splitter</name></name></classId></id><coverageId>427d4c2c0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e27e3aac"><classId hash="1172151809"><name><name>nl/basjes/parse/useragent/analyze/Matcher$ConfigLine</name></name></classId></id><coverageId>54fe4353f</coverageId></classHistory>
<classHistory><id hierarchicalHash="1322c2bcc"><classId hash="2060667969"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></name></classId></id><coverageId>1e55ef911</coverageId></classHistory>
<classHistory><id hierarchicalHash="1f685feac"><classId hash="2296435543"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="2a1cbc4ce"><classId hash="4234647665"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></name></classId></id><coverageId>84689baa</coverageId></classHistory>
<classHistory><id hierarchicalHash="c8c81d5d"><classId hash="3368557917"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="151d5a914"><classId hash="1810769911"><name><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></name></classId></id><coverageId>3934b30e4</coverageId></classHistory>
<classHistory><id hierarchicalHash="b4a33ddf"><classId hash="3030597087"><name><name>nl/basjes/parse/useragent/TestErrorHandling</name></name></classId></id><coverageId>b4a33ddf</coverageId></classHistory>
<classHistory><id hierarchicalHash="d965f2cc"><classId hash="208099208"><name><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></name></classId></id><coverageId>464023b83</coverageId></classHistory>
<classHistory><id hierarchicalHash="1169e55b2"><classId hash="3003863583"><name><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType</name></name></classId></id><coverageId>fdc9c89f</coverageId></classHistory>
<classHistory><id hierarchicalHash="e3249146"><classId hash="3810824518"><name><name>nl/basjes/parse/useragent/utils/YamlUtils</name></name></classId></id><coverageId>54fe4353f</coverageId></classHistory>
<classHistory><id hierarchicalHash="36709ba8"><classId hash="913349544"><name><name>nl/basjes/parse/useragent/parser/UserAgentBaseListener</name></name></classId></id><coverageId>6811ba0ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="1aace6a5a"><classId hash="4084566735"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="181d8337d"><classId hash="3397342194"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="190d6f490"><classId hash="3356415795"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepIsNull</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="14a90ba6d"><classId hash="2177408272"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="da071314"><classId hash="3273992407"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="daeeaea1"><classId hash="3673075361"><name><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></name></classId></id><coverageId>498b0b5eb</coverageId></classHistory>
<classHistory><id hierarchicalHash="11894a7dc"><classId hash="1631307857"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></name></classId></id><coverageId>27665cfe2</coverageId></classHistory>
<classHistory><id hierarchicalHash="16b13475b"><classId hash="2652154903"><name><name>nl/basjes/parse/useragent/utils/WordSplitter</name></name></classId></id><coverageId>464023b83</coverageId></classHistory>
<classHistory><id hierarchicalHash="3b3c1d29"><classId hash="993795369"><name><name>nl/basjes/parse/useragent/TestSerialization</name></name></classId></id><coverageId>3b3c1d29</coverageId></classHistory>
<classHistory><id hierarchicalHash="11bf4853c"><classId hash="1687922097"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="b0e324e8"><classId hash="2967676136"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="1020c53fa"><classId hash="1253274735"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></name></classId></id><coverageId>1c7a8f189</coverageId></classHistory>
<classHistory><id hierarchicalHash="b4215572"><classId hash="3022083442"><name><name>nl/basjes/parse/useragent/parser/UserAgentVisitor</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1d5588c08"><classId hash="3664775307"><name><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></name></classId></id><coverageId>54fe4353f</coverageId></classHistory>
<classHistory><id hierarchicalHash="14afe60a9"><classId hash="2184594252"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="2a7475e3"><classId hash="441641832"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="50f9367f"><classId hash="1099004469"><name><name>nl/basjes/parse/useragent/classify/UserAgentClassifier$1</name></name></classId></id><coverageId>8e575ec6</coverageId></classHistory>
<classHistory><id hierarchicalHash="cb8d9dfb"><classId hash="339000944"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></name></classId></id><coverageId>1e55ef911</coverageId></classHistory>
<classHistory><id hierarchicalHash="d1e921e6"><classId hash="445661787"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></name></classId></id><coverageId>27665cfe2</coverageId></classHistory>
<classHistory><id hierarchicalHash="15d3c0f16"><classId hash="2339892649"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="910080fb"><classId hash="2432729339"><name><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></name></classId></id><coverageId>38313573</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b4ca3a90"><classId hash="4252064517"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></name></classId></id><coverageId>27665cfe2</coverageId></classHistory>
<classHistory><id hierarchicalHash="8ff4ab18"><classId hash="2415176472"><name><name>nl/basjes/parse/useragent/analyze/InvalidParserConfigurationException</name></name></classId></id><coverageId>305c74fd8</coverageId></classHistory>
<classHistory><id hierarchicalHash="2100ae67b"><classId hash="2188687733"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="12123e4e3"><classId hash="1774912856"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></name></classId></id><coverageId>2e643af6d</coverageId></classHistory>
<classHistory><id hierarchicalHash="fe8dd753"><classId hash="2600129472"><name><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="26ce24d2"><classId hash="651044050"><name><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="11ee794df"><classId hash="2808057132"><name><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder</name></name></classId></id><coverageId>187ec05b5</coverageId></classHistory>
<classHistory><id hierarchicalHash="13555de96"><classId hash="1821229369"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepBackToFull</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="1c63e2211"><classId hash="2860515966"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="522b7a03"><classId hash="1378580995"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseListener</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cfb12260"><classId hash="3484492384"><name><name>nl/basjes/parse/useragent/utils/TestNormalize</name></name></classId></id><coverageId>cfb12260</coverageId></classHistory>
<classHistory><id hierarchicalHash="19d6a4302"><classId hash="3567396261"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEndsWith</name></name></classId></id><coverageId>35eb97489</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e62f23c2"><classId hash="3396404271"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="ba246041"><classId hash="46891190"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></name></classId></id><coverageId>27665cfe2</coverageId></classHistory>
<classHistory><id hierarchicalHash="1824a1573"><classId hash="3404805608"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></name></classId></id><coverageId>27665cfe2</coverageId></classHistory>
<classHistory><id hierarchicalHash="18c6e0bbe"><classId hash="3131697745"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></name></classId></id><coverageId>35eb97489</coverageId></classHistory>
<classHistory><id hierarchicalHash="bec48da8"><classId hash="1526353153"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="12c090e3f"><classId hash="1665200354"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepFixedString</name></name></classId></id><coverageId>4521a6ca0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9106d6d1"><classId hash="2433144529"><name><name>nl/basjes/parse/useragent/analyze/TestBuilder</name></name></classId></id><coverageId>9106d6d1</coverageId></classHistory>
<classHistory><id hierarchicalHash="13a3d86d6"><classId hash="2196023115"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e5d60bd"><classId hash="509436093"><name><name>nl/basjes/parse/useragent/annonate/UseragentAnnotationMapper</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9f9d753b"><classId hash="1739338638"><name><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="1d9e5645"><classId hash="496916037"><name><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="fae8837d"><classId hash="4209542013"><name><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="110e8dc21"><classId hash="1059371700"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></name></classId></id><coverageId>35eb97489</coverageId></classHistory>
<classHistory><id hierarchicalHash="211002a39"><classId hash="4114746022"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext</name></name></classId></id><coverageId>4b8cd00c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="992be77"><classId hash="160611959"><name><name>nl/basjes/parse/useragent/annotate/TestAnnotationSystem</name></name></classId></id><coverageId>992be77</coverageId></classHistory>
<classHistory><id hierarchicalHash="66b29422"><classId hash="1722979362"><name><name>nl/basjes/parse/useragent/analyze/TestTreewalkerParsing</name></name></classId></id><coverageId>66b29422</coverageId></classHistory>
<classHistory><id hierarchicalHash="2234140b0"><classId hash="1792675123"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="16c7d3e3d"><classId hash="3039059634"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></name></classId></id><coverageId>1e55ef911</coverageId></classHistory>
<classHistory><id hierarchicalHash="e7d5de01"><classId hash="813497974"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="1929d575c"><classId hash="3678697425"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></name></classId></id><coverageId>1e55ef911</coverageId></classHistory>
<classHistory><id hierarchicalHash="122b3f399"><classId hash="3066416034"><name><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$TestResult</name></name></classId></id><coverageId>2dea7f305</coverageId></classHistory>
<classHistory><id hierarchicalHash="8e575ec6"><classId hash="2388090566"><name><name>nl/basjes/parse/useragent/classify/TestClassifier</name></name></classId></id><coverageId>8e575ec6</coverageId></classHistory>
<classHistory><id hierarchicalHash="2ac9811e3"><classId hash="4087801757"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></name></classId></id><coverageId>35eb97489</coverageId></classHistory>
<classHistory><id hierarchicalHash="229c6fc09"><classId hash="1902102668"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></name></classId></id><coverageId>4b8cd00c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="f77bc4a"><classId hash="259505226"><name><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></name></classId></id><coverageId>8e575ec6</coverageId></classHistory>
<classHistory><id hierarchicalHash="fb1dda84"><classId hash="693745943"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="1db60788"><classId hash="498468744"><name><name>nl/basjes/parse/useragent/analyze/TestMatcherExpressions</name></name></classId></id><coverageId>1db60788</coverageId></classHistory>
<classHistory><id hierarchicalHash="3c2d78c3"><classId hash="1009612995"><name><name>nl/basjes/parse/useragent/parse/TestUserAgentFlattening</name></name></classId></id><coverageId>3c2d78c3</coverageId></classHistory>
<classHistory><id hierarchicalHash="1131cd19e"><classId hash="1096331313"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="15ef95454"><classId hash="2812310729"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></name></classId></id><coverageId>27665cfe2</coverageId></classHistory>
<classHistory><id hierarchicalHash="eb208f61"><classId hash="868724694"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="e47e4a2f"><classId hash="757426852"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></name></classId></id><coverageId>2ae970555</coverageId></classHistory>
<classHistory><id hierarchicalHash="7ff4c377"><classId hash="2146747255"><name><name>nl/basjes/parse/useragent/analyze/TestWordSplitter</name></name></classId></id><coverageId>7ff4c377</coverageId></classHistory>
<classHistory><id hierarchicalHash="14b1820ce"><classId hash="2478784835"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></name></classId></id><coverageId>1e55ef911</coverageId></classHistory>
<classHistory><id hierarchicalHash="6e8abc04"><classId hash="1257559018"><name><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></name></classId></id><coverageId>6811ba0ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="17b2cfdde"><classId hash="2842221681"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="19a33ee66"><classId hash="2230878081"><name><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e22cee22"><classId hash="1019789765"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="191ded5d9"><classId hash="3857154333"><name><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></name></classId></id><coverageId>58c11ae02</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ad3099ab"><classId hash="4124555808"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></name></classId></id><coverageId>1c7a8f189</coverageId></classHistory>
<classHistory><id hierarchicalHash="189051b7a"><classId hash="2384238589"><name><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></name></classId></id><coverageId>4b8cd00c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="65c9f601"><classId hash="1707734529"><name><name>nl/basjes/parse/useragent/utils/Normalize</name></name></classId></id><coverageId>3f6396176</coverageId></classHistory>
<classHistory><id hierarchicalHash="2a97871ab"><classId hash="4035397477"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="145ea712f"><classId hash="2391904676"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="d0366eeb"><classId hash="417173344"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></name></classId></id><coverageId>258afc85a</coverageId></classHistory>
<classHistory><id hierarchicalHash="e2c6bc97"><classId hash="436117306"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="11b421d17"><classId hash="1383727034"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepNormalizeBrand</name></name></classId></id><coverageId>35eb97489</coverageId></classHistory>
<classHistory><id hierarchicalHash="fc292219"><classId hash="1154499214"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></name></classId></id><coverageId>1c7a8f189</coverageId></classHistory>
<classHistory><id hierarchicalHash="21239c784"><classId hash="2761202735"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></name></classId></id><coverageId>4521a6ca0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1c2e33703"><classId hash="4045346198"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="b49b28db"><classId hash="3030067419"><name><name>nl/basjes/parse/useragent/TestPredefinedBrowsersPerField</name></name></classId></id><coverageId>b49b28db</coverageId></classHistory>
<classHistory><id hierarchicalHash="103d05c7f"><classId hash="1282899188"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="70202ba1"><classId hash="1812232364"><name><name>nl/basjes/parse/useragent/parser/UserAgentLexer</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="c5329aaf"><classId hash="3308427951"><name><name>nl/basjes/parse/useragent/Version</name></name></classId></id><coverageId>341036d01</coverageId></classHistory>
<classHistory><id hierarchicalHash="15babc8ca"><classId hash="1623409997"><name><name>nl/basjes/parse/useragent/analyze/MatcherAction$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2084531e4"><classId hash="2058290398"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="12a5d1829"><classId hash="245299350"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="182b4acf4"><classId hash="3119288215"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="1abbf56c3"><classId hash="4208734683"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></name></classId></id><coverageId>3a7dfff49</coverageId></classHistory>
<classHistory><id hierarchicalHash="9ba432c2"><classId hash="2611229378"><name><name>nl/basjes/parse/useragent/TestPredefinedBrowsers</name></name></classId></id><coverageId>9ba432c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="1533f9d93"><classId hash="2615590408"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></name></classId></id><coverageId>1e55ef911</coverageId></classHistory>
<classHistory><id hierarchicalHash="492e0860"><classId hash="1227753568"><name><name>nl/basjes/parse/useragent/classify/DeviceClass</name></name></classId></id><coverageId>8e575ec6</coverageId></classHistory>
<classHistory><id hierarchicalHash="75a1d30c"><classId hash="1589635279"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="9a039f3b"><classId hash="1670579091"><name><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></name></classId></id><coverageId>58c11ae02</coverageId></classHistory>
<classHistory><id hierarchicalHash="1c8de0c6d"><classId hash="4145670912"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></name></classId></id><coverageId>35eb97489</coverageId></classHistory>
<classHistory><id hierarchicalHash="1342561af"><classId hash="2093777444"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></name></classId></id><coverageId>27665cfe2</coverageId></classHistory>
<classHistory><id hierarchicalHash="230a8fbea"><classId hash="2664048145"><name><name>nl/basjes/parse/useragent/UserAgentAnalyzer$GetAllPathsAnalyzer</name></name></classId></id><coverageId>73da22db</coverageId></classHistory>
<classHistory><id hierarchicalHash="24b22eefb"><classId hash="3180118517"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="bdb77aef"><classId hash="3182918383"><name><name>nl/basjes/parse/useragent/parser/UserAgentListener</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="63ca40a7"><classId hash="1674199207"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="5a066ffd"><classId hash="1441447176"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerLexer</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="2b10b1281"><classId hash="4162447419"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="19bdfd495"><classId hash="2700562712"><name><name>nl/basjes/parse/useragent/analyze/MatcherAction$Match</name></name></classId></id><coverageId>3a7dfff49</coverageId></classHistory>
<classHistory><id hierarchicalHash="192c80a11"><classId hash="3388992692"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepUp</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="7460eba7"><classId hash="1510867007"><name><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="2118a2102"><classId hash="4123787631"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="fdc9c89f"><classId hash="4257859743"><name><name>nl/basjes/parse/useragent/DocumentationExample</name></name></classId></id><coverageId>fdc9c89f</coverageId></classHistory>
<classHistory><id hierarchicalHash="2e9e76fc"><classId hash="782137084"><name><name>nl/basjes/parse/useragent/annotate/TestAnnotationSystemAnonymous</name></name></classId></id><coverageId>2e9e76fc</coverageId></classHistory>
<classHistory><id hierarchicalHash="100fb597d"><classId hash="1235384818"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></name></classId></id><coverageId>27665cfe2</coverageId></classHistory>
<classHistory><id hierarchicalHash="14508f4a8"><classId hash="3942315113"><name><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="18c30ad91"><classId hash="2437425684"><name><name>nl/basjes/parse/useragent/analyze/MatcherAction$InitErrorListener</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="152cb5f45"><classId hash="2798914185"><name><name>nl/basjes/parse/useragent/debug/FlattenPrinter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a3185eb9"><classId hash="2294641489"><name><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="abf754bc"><classId hash="2885113020"><name><name>nl/basjes/parse/useragent/analyze/Analyzer</name></name></classId></id><coverageId>58c11ae02</coverageId></classHistory>
<classHistory><id hierarchicalHash="1247b3243"><classId hash="1538462950"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepCleanVersion</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="21a071d19"><classId hash="1628828371"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></name></classId></id><coverageId>1db60788</coverageId></classHistory>
<classHistory><id hierarchicalHash="1590b45c5"><classId hash="2420320360"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepContains</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="979e6ec9"><classId hash="2543742665"><name><name>nl/basjes/parse/useragent/analyze/UselessMatcherException</name></name></classId></id><coverageId>2512411f9</coverageId></classHistory>
<classHistory><id hierarchicalHash="c60956ed"><classId hash="246445922"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></name></classId></id><coverageId>1db60788</coverageId></classHistory>
<classHistory><id hierarchicalHash="3e2e379c"><classId hash="1043216284"><name><name>nl/basjes/parse/useragent/analyze/TestNumberRangeVisitor</name></name></classId></id><coverageId>3e2e379c</coverageId></classHistory>
<classHistory><id hierarchicalHash="24cf1ecaf"><classId hash="3210461097"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></name></classId></id><coverageId>35eb97489</coverageId></classHistory>
<classHistory><id hierarchicalHash="63d03e81"><classId hash="1674591873"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerVisitor</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="37acaa18"><classId hash="934062616"><name><name>nl/basjes/parse/useragent/TestDeveloperTools</name></name></classId></id><coverageId>37acaa18</coverageId></classHistory>
<classHistory><id hierarchicalHash="1679b53ac"><classId hash="3917359005"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="5a0683c2"><classId hash="597026842"><name><name>nl/basjes/parse/useragent/UserAgent</name></name></classId></id><coverageId>6811ba0ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="9ca09cab"><classId hash="2627771563"><name><name>nl/basjes/parse/useragent/analyze/Matcher</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="16a5c85b9"><classId hash="3674885873"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="77039a2d"><classId hash="1996724781"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerListener</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f18160d9"><classId hash="194633660"><name><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></name></classId></id><coverageId>305c74fd8</coverageId></classHistory>
<classHistory><id hierarchicalHash="1fdfd2319"><classId hash="3795780486"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="193bf6aff"><classId hash="3697707892"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></name></classId></id><coverageId>59e3804b</coverageId></classHistory>
<classHistory><id hierarchicalHash="27e67e6f6"><classId hash="3312893104"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="f360f817"><classId hash="4083218455"><name><name>nl/basjes/parse/useragent/analyze/TestBasics</name></name></classId></id><coverageId>f360f817</coverageId></classHistory>
<classHistory><id hierarchicalHash="265ef9ab2"><classId hash="3230363221"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="16d203f31"><classId hash="2757239252"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEquals</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ab9d667a"><classId hash="3805628701"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></name></classId></id><coverageId>35eb97489</coverageId></classHistory>
<classHistory><id hierarchicalHash="5cfea848"><classId hash="1560193096"><name><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></name></classId></id><coverageId>5f4c500fd</coverageId></classHistory>
<classHistory><id hierarchicalHash="17f01518c"><classId hash="3349705217"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="dfffed09"><classId hash="238799772"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="9f73c143"><classId hash="2404529864"><name><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></name></classId></id><coverageId>5b696c961</coverageId></classHistory>
<classHistory><id hierarchicalHash="19ebb0c37"><classId hash="3438734026"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="b2777e8e"><classId hash="2994175630"><name><name>nl/basjes/parse/useragent/annonate/YauaaField</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="9eb96309"><classId hash="2065922799"><name><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></name></classId></id><coverageId>2dea7f305</coverageId></classHistory>
<classHistory><id hierarchicalHash="1635f09ca"><classId hash="2442848349"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></name></classId></id><coverageId>4c335d14a</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b516f6a5"><classId hash="4257093402"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></name></classId></id><coverageId>3e40d780c</coverageId></classHistory>
<classHistory><id hierarchicalHash="178f28107"><classId hash="3248071036"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></name></classId></id><coverageId>27665cfe2</coverageId></classHistory>
<classHistory><id hierarchicalHash="17bd0dbfb"><classId hash="3296197744"><name><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></name></classId></id><coverageId>59e3804b</coverageId></classHistory>
<classHistory><id hierarchicalHash="dba047df"><classId hash="316156546"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepStartsWith</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="c763026f"><classId hash="1674575580"><name><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$1</name></name></classId></id><coverageId>fdc9c89f</coverageId></classHistory>
<classHistory><id hierarchicalHash="1f30b3317"><classId hash="1302791866"><name><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></name></classId></id><coverageId>3c56c08ab</coverageId></classHistory>
<classHistory><id hierarchicalHash="dd954402"><classId hash="348989093"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepNotEquals</name></name></classId></id><coverageId>35eb97489</coverageId></classHistory>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>144</int><int>114</int><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>299</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>302</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="22" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 29 -&gt; Only field: &quot;AgentSecurity&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>319</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="22" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 29 -&gt; Only field: &quot;AgentSecurity&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>397</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>219</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>247</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>257</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>267</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>273</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>287</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>329</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>369</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>376</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentBlock</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>390</int><int>380</int><int>350</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>538</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>540</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>545</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>618</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>620</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>951</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="8" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>226</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>251</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>262</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>272</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>287</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>298</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>308</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>323</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>334</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>344</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>359</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>370</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>380</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>395</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>406</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>416</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>431</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>442</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>452</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>467</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>478</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>488</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>503</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>514</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>520</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>550</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>562</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>568</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>595</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>601</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>626</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>632</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>650</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>664</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>678</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>692</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>703</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>713</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>728</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>739</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>749</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>766</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>771</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>777</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>795</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>809</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>823</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>837</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>848</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>858</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>873</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>884</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>894</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>924</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>931</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentEntry</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>944</int><int>935</int><int>905</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1354</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1358</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1360</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="53" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 6 -&gt; Only field: &quot;OperatingSystemClass&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>220</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>358</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>360</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>365</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>388</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>423</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>474</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>476</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>481</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>534</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>557</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>728</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="52" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 6 -&gt; Only field: &quot;OperatingSystemClass&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>763</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="52" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 6 -&gt; Only field: &quot;OperatingSystemClass&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>814</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>816</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>821</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>874</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>897</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1019</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="52" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 6 -&gt; Only field: &quot;OperatingSystemClass&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1021</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1083</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="53" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 6 -&gt; Only field: &quot;OperatingSystemClass&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1233</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1240</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1264</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1355</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1363</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="53" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 6 -&gt; Only field: &quot;OperatingSystemClass&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1393</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1395</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1400</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1423</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1469</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1522</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1545</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1758</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1808</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1853</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1856</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1885</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1887</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1892</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1915</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1961</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="52" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 9 -&gt; Only field: &quot;OperatingSystemNameVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2014</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2037</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>202</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>248</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>260</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>266</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>284</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>298</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>309</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>315</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>334</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>340</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>370</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>376</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>393</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>405</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>411</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>428</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>440</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>450</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>456</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>486</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>492</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>505</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>516</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>522</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>539</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>545</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>562</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>574</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>580</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>598</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>612</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>623</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>629</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>648</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>654</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>674</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>679</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>689</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>695</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>710</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>716</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>733</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>745</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>751</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>768</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>780</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>790</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>796</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>826</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>832</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>845</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>856</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>862</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>879</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>885</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>902</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>914</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>920</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>938</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>952</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>963</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>969</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>996</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1002</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1031</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1036</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1046</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1052</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1065</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1071</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1088</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1245</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1251</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1269</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1280</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1300</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1311</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1336</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1342</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1369</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1375</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1405</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1411</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1428</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1440</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1450</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1456</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1474</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1480</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1493</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1504</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1510</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1527</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1533</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1550</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1562</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1568</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1586</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1600</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1611</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1617</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1631</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1637</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1657</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1662</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1672</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1678</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1691</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1697</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1710</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1716</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1729</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1740</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1746</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1767</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1790</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1796</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1813</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1825</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1835</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1841</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1861</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1867</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1897</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1903</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1920</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1932</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1942</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1948</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1966</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1972</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1985</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>1996</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2002</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2019</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2025</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2042</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2054</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2060</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2078</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2092</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentProduct</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>2177</int><int>2147</int><int>2187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>80</int><int>120</int><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>144</int><int>114</int><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>118</int><int>109</int><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>getATN</name></method><methodDesc>()Lorg/antlr/v4/runtime/atn/ATN;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>getGrammarFileName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>getRuleNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>getSerializedATN</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>getTokenNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>getVocabulary</name></method><methodDesc>()Lorg/antlr/v4/runtime/Vocabulary;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="8" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>171</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>192</int><int>182</int><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>298</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>300</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>352</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>252</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>275</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>281</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>305</int><int>345</int><int>335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>324</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>331</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>194</int><int>164</int><int>203</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyValueVersionName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;</methodDesc></location><indexes><int>68</int><int>38</int><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>176</int><int>166</int><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>340</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>230</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>261</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>277</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>282</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>319</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>multipleWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>323</int><int>293</int><int>333</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>274</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>324</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>439</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>441</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>446</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>469</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>504</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>507</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>525</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>528</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>545</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>600</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>602</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>607</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>660</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>683</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>817</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>901</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>936</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>939</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>957</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 28 -&gt; Only field: &quot;AgentInformationUrl&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>960</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>977</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="35" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 23 -&gt; Only field: &quot;AgentNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1032</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1034</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1039</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1092</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 28 -&gt; Only field: &quot;AgentInformationUrl&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1263</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="51" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 11 -&gt; Only field: &quot;LayoutEngineClass&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1431</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1497</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1499</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1504</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1528</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1672</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1675</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1692</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1731</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="31" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 16 -&gt; Only field: &quot;LayoutEngineNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1734</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="51" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 11 -&gt; Only field: &quot;LayoutEngineClass&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1783</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="51" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 11 -&gt; Only field: &quot;LayoutEngineClass&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1785</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1809</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1893</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1977</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2027</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2246</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 28 -&gt; Only field: &quot;AgentInformationUrl&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2249</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2266</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2321</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2323</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2328</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2381</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2404</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2538</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2652</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>226</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>245</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>262</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>283</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>306</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>329</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>365</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>379</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>390</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>396</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>415</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>421</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>451</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>457</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>474</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>486</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>492</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>513</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>555</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>566</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>576</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>582</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>612</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>618</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>631</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>642</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>648</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>665</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>671</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>688</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>700</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>706</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>724</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>738</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>749</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>755</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>774</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>780</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>799</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>805</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>822</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>833</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>847</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>852</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>862</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>868</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>883</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>889</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>906</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>918</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>924</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>945</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>987</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>998</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1008</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1014</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1044</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1050</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1063</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1074</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1080</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1097</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1220</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1245</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1251</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1268</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1279</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1298</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1308</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1314</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1329</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1352</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1364</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1370</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1383</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1389</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1402</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1413</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1419</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1440</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1463</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1473</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1479</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1509</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1515</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1533</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1544</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1550</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1564</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1575</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1581</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1600</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1606</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1624</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1636</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1642</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1660</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1702</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1713</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1719</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1740</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1760</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1766</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1791</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1797</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1814</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1825</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1839</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1844</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1854</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1860</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1875</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1881</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1898</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1910</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1916</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1929</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1935</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1948</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1959</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1965</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>1986</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2009</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2015</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2032</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2044</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2050</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2068</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2082</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2276</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2287</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2303</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2333</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2339</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2352</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2363</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2369</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2386</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2392</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2409</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2421</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2427</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2445</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2459</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2470</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2476</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2495</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2501</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2520</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2526</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2543</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2554</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2568</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2573</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2583</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2594</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2624</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2631</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>product</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>2645</int><int>2635</int><int>2605</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>192</int><int>162</int><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameEmail</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameEmail</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameEmail</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameEmail</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameEmail</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameEmail</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameEmail</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext;</methodDesc></location><indexes><int>67</int><int>37</int><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>298</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllFieldsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>300</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>352</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>252</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>275</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>281</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>305</int><int>345</int><int>335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>324</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>331</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameNoVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameNoVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameNoVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameNoVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameNoVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameNoVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;</methodDesc></location><indexes><int>48</int><int>87</int><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameNoVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameNoVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext;</methodDesc></location><indexes><int>67</int><int>37</int><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUuid</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUuid</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUuid</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUuid</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUuid</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUuid</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameUuid</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext;</methodDesc></location><indexes><int>67</int><int>37</int><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>196</int><int>166</int><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>300</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>302</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="43" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 10 -&gt; Only field: &quot;OperatingSystemVersionBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>483</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>487</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>489</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="43" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 10 -&gt; Only field: &quot;OperatingSystemVersionBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="35" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 23 -&gt; Only field: &quot;AgentNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>261</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>305</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="43" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 10 -&gt; Only field: &quot;OperatingSystemVersionBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>329</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>332</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>350</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>353</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>370</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>484</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>492</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="43" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 10 -&gt; Only field: &quot;OperatingSystemVersionBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>516</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>519</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>537</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>540</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>557</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>699</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>701</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>706</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>730</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>733</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>751</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>754</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>771</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>895</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>249</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>266</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>277</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>283</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>310</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>316</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>338</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>380</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>391</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>397</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>411</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>422</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>428</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>442</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>453</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>464</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>470</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>497</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>503</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>525</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>567</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>578</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>584</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>598</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>609</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>615</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>629</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>640</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>646</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>664</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>675</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>681</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>711</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>717</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>739</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>781</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>792</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>798</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>812</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>824</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>830</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>848</int><int>888</int><int>878</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>867</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>874</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>192</int><int>162</int><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>112</int><int>151</int><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="25" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 48 -&gt; Only field: &quot;__SyntaxError__&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>192</int><int>162</int><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 26 -&gt; Only field: &quot;AgentLanguageCode&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>176</int><int>146</int><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootElements</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>181</int><int>172</int><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="24" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 4 -&gt; Only field: &quot;DeviceFirmwareVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>221</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>225</int><int>195</int><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="21" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 4 -&gt; Only field: &quot;DeviceFirmwareVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;</methodDesc></location><indexes><int>68</int><int>38</int><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>115</int><int>85</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>144</int><int>114</int><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>221</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 27 -&gt; Only field: &quot;AgentInformationEmail&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 27 -&gt; Only field: &quot;AgentInformationEmail&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>362</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>366</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>368</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>388</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>392</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>394</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 27 -&gt; Only field: &quot;AgentInformationEmail&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>230</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 27 -&gt; Only field: &quot;AgentInformationEmail&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>248</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 4 -&gt; Only field: &quot;DeviceFirmwareVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>363</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>371</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>389</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>397</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>415</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>502</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>258</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>269</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>275</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>307</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>318</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>324</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>343</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>349</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>376</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>425</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>436</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>442</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>474</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="25" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 48 -&gt; Only field: &quot;__SyntaxError__&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>481</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>userAgent</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>485</int><int>455</int><int>495</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>144</int><int>114</int><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser</name></clazz><method><name>versionWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>132</int><int>102</int><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>addMajorVersionField</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>addMajorVersionField</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>addMajorVersionField</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>addMajorVersionField</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="79" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 16 -&gt; Only field: &quot;LayoutEngineNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 16 -&gt; Only field: &quot;LayoutEngineNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>disableCaching</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>eraseTestCases</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPaths</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPathsAnalyzer</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$GetAllPathsAnalyzer;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>()Ljava/util/Set;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>()Ljava/util/Set;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getCacheSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getCacheSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getCacheSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getRequiredInformRanges</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>264</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="79" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="79" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>326</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="79" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>349</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>356</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.methodInputValidation(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="18" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 40 -&gt; Only field: &quot;HackerAttackVector&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="18" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 40 -&gt; Only field: &quot;HackerAttackVector&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="18" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 40 -&gt; Only field: &quot;HackerAttackVector&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsers.nl.basjes.parse.useragent.TestPredefinedBrowsers</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>264</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>291</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="28" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 27 -&gt; Only field: &quot;AgentInformationEmail&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>326</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="20" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>349</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>356</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>362</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>393</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="48" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 16 -&gt; Only field: &quot;LayoutEngineNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>203</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="56" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 54 -&gt; Only field: &quot;WebviewAppVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>219</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="57" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 52 -&gt; Only field: &quot;WebviewAppNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>251</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>280</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 27 -&gt; Only field: &quot;AgentInformationEmail&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>388</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>lambda$getRequiredInformRanges$3</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>lambda$informMeAbout$2</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>lambda$loadYamlMatcher$0</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>lambda$lookingForRange$1</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkEmptyFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkBadStructure(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>203</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkEmptyFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>376</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="87" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>386</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>445</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="15" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>458</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="15" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>460</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="15" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>469</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="15" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>533</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>535</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkEmptyFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>283</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>298</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>325</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>353</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>410</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkEmptyFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="24" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateErrorSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>221</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>276</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>287</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>290</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>319</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="23" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateErrorSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>331</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>349</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>282</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>301</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="63" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>padding</name></method><methodDesc>(CI)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>padding</name></method><methodDesc>(CI)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>padding</name></method><methodDesc>(CI)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>padding</name></method><methodDesc>(CI)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.methodInputValidation(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>setCacheSize</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>setCacheSize</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>setShowMatcherStats</name></method><methodDesc>(Z)Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="24" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>setVerbose</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>148</int><int>118</int><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>getATN</name></method><methodDesc>()Lorg/antlr/v4/runtime/atn/ATN;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>getGrammarFileName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>getRuleNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>getSerializedATN</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>getTokenNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>getVocabulary</name></method><methodDesc>()Lorg/antlr/v4/runtime/Vocabulary;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>314</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>400</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>402</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>407</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>412</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>450</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>547</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorExpect(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="92" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="92" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="92" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testAskingForImpossibleField(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>250</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>261</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>274</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>302</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>319</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="7" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>330</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="7" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>344</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>376</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>382</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>414</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>437</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>442</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>462</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>473</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>479</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>517</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorExpect(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>524</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>529</int><int>498</int><int>540</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="87" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="87" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcherRequire</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;</methodDesc></location><indexes><int>176</int><int>167</int><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="87" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher_sempred</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;I)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>matcher_sempred</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;I)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>283</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>263</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>276</int><int>267</int><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>896</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>202</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>242</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.methodInputValidation(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>267</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>272</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>283</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>289</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>307</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>332</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>337</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>348</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>361</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>367</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>385</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>410</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="46" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 23 -&gt; Only field: &quot;AgentNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>415</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>426</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>439</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>445</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>463</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>488</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>493</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>504</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>517</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>523</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>541</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>566</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>571</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>582</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>595</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>601</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>619</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>644</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>649</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>660</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>673</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>679</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>697</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>722</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>727</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>737</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>743</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>761</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>786</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>791</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>802</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>808</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>826</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>869</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>876</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>880</int><int>850</int><int>889</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>sempred</name></method><methodDesc>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>sempred</name></method><methodDesc>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>342</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="78" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="78" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="78" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="78" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="78" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>233</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>261</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>272</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>315</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>322</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>326</int><int>296</int><int>335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>getMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>getMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>getUsedMatches</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>getUsedMatches</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Ljava/util/List;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>getUsedMatches</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Ljava/util/List;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>getUsedMatches</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Ljava/util/List;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>initialize</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lnl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZ)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>379</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>416</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>440</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>823</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="54" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1242</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1268</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1315</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1367</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1478</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1513</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1565</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1608</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>388</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>425</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>449</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1251</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1277</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1324</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1350</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1376</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1487</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1522</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1574</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1617</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>371</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>373</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>461</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>462</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>578</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="15" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateErrorSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="15" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateErrorSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>219</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>260</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>299</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateNewTestcaseSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>302</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>326</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>379</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>403</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>416</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>440</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>485</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>505</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>548</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>614</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>638</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateErrorSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>668</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateNewTestcaseSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>677</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>680</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="15" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>690</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>712</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>722</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>743</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateErrorSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>751</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>757</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>795</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>812</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>823</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>858</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>867</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>886</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>893</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 48 -&gt; Only field: &quot;__SyntaxError__&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>946</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>959</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>961</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>963</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>967</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>978</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>994</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1008</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1018</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1020</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1074</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1084</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1242</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1268</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1315</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1367</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1411</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateNewTestcaseSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1425</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1438</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1478</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1513</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1556</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1565</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1608</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1630</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1699</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateNewTestcaseSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1701</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1710</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1723</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="72" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1705</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateErrorSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1714</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateNewTestcaseSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1733</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>265</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>270</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>283</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>288</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>336</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>395</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>407</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>602</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>610</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>694</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="58" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1026</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1300</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester</name></clazz><method><name>runTests</name></method><methodDesc>(ZZLjava/util/Collection;ZZ)Z</methodDesc></location><indexes><int>1420</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>clone</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="73" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>clone</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="78" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>clone</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="78" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>clone</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="73" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent$AgentField;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent$AgentField;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent$AgentField;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAmbiguityCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getUserAgentString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>hasAmbiguity</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>hasSyntaxError</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isDebug</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isSystemField</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isSystemField</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isSystemField</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isSystemField</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>processSetAll</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>processSetAll</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>processSetAll</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>reportAmbiguity</name></method><methodDesc>(Lorg/antlr/v4/runtime/Parser;Lorg/antlr/v4/runtime/dfa/DFA;IIZLjava/util/BitSet;Lorg/antlr/v4/runtime/atn/ATNConfigSet;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="11" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="11" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/UserAgent$AgentField;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setUserAgentString</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>syntaxError</name></method><methodDesc>(Lorg/antlr/v4/runtime/Recognizer;Ljava/lang/Object;IILjava/lang/String;Lorg/antlr/v4/runtime/RecognitionException;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="59" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toString</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>([C)Ljava/util/List;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>([C)Ljava/util/List;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>([C)Ljava/util/List;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 3 -&gt; Only field: &quot;DeviceCpu&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>([C)Ljava/util/List;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitterRange(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitterRange(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>defaultResult</name></method><methodDesc>()Ljava/util/Iterator;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>getChildrenByName</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$0</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$0</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$0</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$0</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$1</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="20" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$1</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="20" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$1</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="21" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$1</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="20" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$10</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$12</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$13</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$2</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$2</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$2</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$3</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$4</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$4</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$4</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$5</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$5</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$5</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$7</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="12" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="12" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="12" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="12" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="12" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$9</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="12" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitCommentBlock</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitCommentEntry</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitCommentProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitKeyWithoutValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameNoVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductVersionWithCommas</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitRootElements</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lorg/antlr/v4/runtime/ParserRuleContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lorg/antlr/v4/runtime/ParserRuleContext;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lorg/antlr/v4/runtime/ParserRuleContext;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lorg/antlr/v4/runtime/ParserRuleContext;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>cannotBeValid</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>cannotBeValid</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>cannotBeValid</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>getEvaluatorForUnitTesting</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>getMatchExpression</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>getMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="13" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="93" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="93" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>isValidIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>isValidIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>isValidIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>isValidIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>mustHaveMatches</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>processInformedMatches</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>processInformedMatches</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>processInformedMatches</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>setVerbose</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="93" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>setVerbose</name></method><methodDesc>(ZZ)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="93" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>add</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherCleanVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherCleanVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherCleanVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherNormalizeBrand</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherNormalizeBrand</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherNormalizeBrand</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathIsNull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitPathWalk</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitPathWalk</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepBackToFull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepBackToFull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepBackToFull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepDown</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepDown</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepDown</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="46" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 23 -&gt; Only field: &quot;AgentNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepPrev</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepPrev</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepPrev</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepPrev</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepUp</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepUp</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="40" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 40 -&gt; Only field: &quot;HackerAttackVector&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepUp</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepUp</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>542</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>269</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>273</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="20" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>326</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>353</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>371</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>380</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>385</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="79" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>419</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>433</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>480</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>522</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>535</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>553</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>466</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>475</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>530</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>()Ljava/util/Set;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>(Ljava/util/List;)Ljava/util/Set;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testAskingForImpossibleField(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>(Ljava/util/List;)Ljava/util/Set;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>(Ljava/util/List;)Ljava/util/Set;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getVerbose</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="17" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>gotMyFirstStartingPoint</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>informMeAbout</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/MatcherAction;Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>lookingForRange</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>reset</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>reset</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>reset</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>reset</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterCommentEntry</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterCommentProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterKeyName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterKeyValueProductVersionName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterKeyValueVersionName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterMultipleWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductNameNoVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductNameVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductNameWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersion</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringVersionTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersion</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersion</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersionWithCommas</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersionWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterRootText</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterSingleVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterSingleVersionWithCommas</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="13" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterVersionWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubVersions</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parse</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="79" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.methodInputValidation(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="51" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 48 -&gt; Only field: &quot;__SyntaxError__&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>CURLYBRACECLOSE</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>CURLYBRACECLOSE</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>CURLYBRACEOPEN</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>CURLYBRACEOPEN</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>MINUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>base64</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>base64</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>commentBlock</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>commentBlock</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>commentProduct</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>commentProduct</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>emailAddress</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>emailAddress</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>emptyWord</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>keyValue</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>keyValue</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>keyWithoutValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>multipleWords</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>multipleWords</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>productNameNoVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>siteUrl</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>siteUrl</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>uuId</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>uuId</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>versionWords</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext</name></clazz><method><name>versionWords</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitBase64</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitCommentBlock</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitCommentEntry</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitCommentProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitCommentSeparator</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitEmailAddress</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitEmptyWord</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitKeyName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitKeyValueProductVersionName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitKeyValueVersionName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitKeyWithoutValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitMultipleWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductNameEmail</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductNameNoVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductNameUrl</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductNameUuid</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductNameVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductNameWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductVersionSingleWord</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductVersionWithCommas</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitProductVersionWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitRootElements</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitRootText</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitSingleVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitSingleVersionWithCommas</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitSiteUrl</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitUuId</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentBaseVisitor</name></clazz><method><name>visitVersionWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/util/Map;Z)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="15" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/util/Map;Z)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/util/Map;Z)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/util/Map;Z)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>getFirstStep</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>getFirstStep</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>getFirstStep</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>getFirstStep</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="8" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="88" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>addGeneratedFields</name></method><methodDesc>(Ljava/lang/String;[Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="44" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 52 -&gt; Only field: &quot;WebviewAppNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="38" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 15 -&gt; Only field: &quot;LayoutEngineNameVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="35" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 16 -&gt; Only field: &quot;LayoutEngineNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="56" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 9 -&gt; Only field: &quot;OperatingSystemNameVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="35" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 16 -&gt; Only field: &quot;LayoutEngineNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="43" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 54 -&gt; Only field: &quot;WebviewAppVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>hideMatcherLoadStats</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testAskingForImpossibleField(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>preheat</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>showMatcherLoadStats</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withAllFields</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withCache</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withCache</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withField</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withField</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testAskingForImpossibleField(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withFields</name></method><methodDesc>(Ljava/util/Collection;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withFields</name></method><methodDesc>(Ljava/util/Collection;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withFields</name></method><methodDesc>(Ljava/util/Collection;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withFields</name></method><methodDesc>(Ljava/util/Collection;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="7" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withoutCache</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testAskingForImpossibleField(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withoutCache</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>COLON</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>COLON</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>EOF</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>EQUALS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>EQUALS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>MINUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>SEMICOLON</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>SEMICOLON</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>SLASH</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>SLASH</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>commentBlock</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>commentBlock</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>productVersion</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>productVersion</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductContext</name></clazz><method><name>productVersionWords</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="32" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 52 -&gt; Only field: &quot;WebviewAppNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandOne(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="29" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>cleanupDeviceBrandName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkCombiningDeviceNameAndBrand(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>cleanupDeviceBrandName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="8" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>cleanupDeviceBrandName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkCombiningDeviceNameAndBrand(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>email</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkEmailNormalization(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>isTokenSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>isTokenSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitMatcherBase</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitMatcherCleanVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitMatcherNormalizeBrand</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitMatcherPath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitMatcherPathIsNull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitMatcherWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitNumberRangeAll</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitNumberRangeEmpty</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitNumberRangeSingleValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitNumberRangeStartToEnd</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitPathWalk</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepBackToFull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepDown</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepPrev</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepUp</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitStepWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitWordRangeFirstWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitWordRangeLastWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitWordRangeSingleWord</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerBaseVisitor</name></clazz><method><name>visitWordRangeStartToEnd</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>BRACECLOSE</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>BRACECLOSE</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>BRACEOPEN</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>BRACEOPEN</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>COMMA</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>COMMA</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>MINUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>PLUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>PLUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>SEMICOLON</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>SEMICOLON</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>product</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>product</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>rootElements</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext</name></clazz><method><name>rootElements</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>getActualValue</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>getActualValue</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>getActualValue</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>getNextStep</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>setNextStep</name></method><methodDesc>(ILnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>setNextStep</name></method><methodDesc>(ILnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>setNextStep</name></method><methodDesc>(ILnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>setNextStep</name></method><methodDesc>(ILnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>treeIsSeparator</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>treeIsSeparator</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>treeIsSeparator</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getInstance</name></method><methodDesc>()Lnl/basjes/parse/useragent/utils/VersionSplitter;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="92" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getInstance</name></method><methodDesc>()Lnl/basjes/parse/useragent/utils/VersionSplitter;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 54 -&gt; Only field: &quot;WebviewAppVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>isEndOfStringSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>isSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>isSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW1(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterEMail(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterEMail(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>276</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testTooManyParameters(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testTooManyParameters(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testTooManyParameters(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testTooManyParameters(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testTooManyParameters(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testWrongTypeParameters2(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>284</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>307</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UseragentAnnotationMapper;)V</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>lambda$initialize$0</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>202</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>242</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>247</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>252</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>257</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isDeliberateMisuse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isDeliberateMisuse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isHuman</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isHuman</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isMobile</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isMobile</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isNormalConsumerDevice</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isNormalConsumerDevice</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;JLjava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorExpect(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>getAttribute</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>isFixedValue</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>isFixedValue</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>parseWalkerExpression</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser;)Lorg/antlr/v4/runtime/ParserRuleContext;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>setFixedValue</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="77" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>COLON</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>COLON</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>EQUALS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>EQUALS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>base64</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>base64</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>emailAddress</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>emailAddress</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>keyValueProductVersionName</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>multipleWords</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>multipleWords</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>siteUrl</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>siteUrl</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>uuId</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext</name></clazz><method><name>uuId</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>COLON</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>COLON</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>EQUALS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>EQUALS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>MINUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>SLASH</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>SLASH</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>commentBlock</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>commentBlock</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>productVersionSingleWord</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>productVersionWithCommas</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>productVersionWords</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext</name></clazz><method><name>productVersionWords</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>COLON</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>COLON</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>EQUALS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>EQUALS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>base64</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>base64</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>emailAddress</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>emailAddress</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>keyValueVersionName</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>keyValueVersionName</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>multipleWords</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>multipleWords</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>siteUrl</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>siteUrl</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>uuId</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext</name></clazz><method><name>uuId</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>createErrorString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getExactlyOneNodeTuple</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/NodeTuple;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getExactlyOneNodeTuple</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/NodeTuple;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getExactlyOneNodeTuple</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/NodeTuple;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getKeyAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getKeyAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getKeyAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsMappingNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/MappingNode;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsMappingNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/MappingNode;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsMappingNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/MappingNode;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsSequenceNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/SequenceNode;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsSequenceNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/SequenceNode;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsSequenceNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/SequenceNode;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="46" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 23 -&gt; Only field: &quot;AgentNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 9 -&gt; Only field: &quot;OperatingSystemNameVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>hasNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>hasNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>next</name></method><methodDesc>()Lorg/antlr/v4/runtime/ParserRuleContext;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>next</name></method><methodDesc>()Lorg/antlr/v4/runtime/ParserRuleContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>analyzeMatchersResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>analyzeMatchersResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>analyzeMatchersResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="15" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>analyzeMatchersResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>analyzeMatchersResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>analyzeMatchersResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>analyzeMatchersResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 17 -&gt; Only field: &quot;LayoutEngineBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>analyzeMatchersResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>analyzeMatchersResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>getNumberOfAppliedMatches</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>set</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>toMatchTrace</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>toMatchTrace</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>toMatchTrace</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>toMatchTrace</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>toMatchTrace</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/DebugUserAgent</name></clazz><method><name>toMatchTrace</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>BRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>BRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>EOF</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>commentEntry</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>commentEntry</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>commentSeparator</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>commentSeparator</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="67" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 20 -&gt; Only field: &quot;AgentVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="49" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 3 -&gt; Only field: &quot;DeviceCpu&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="57" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 15 -&gt; Only field: &quot;LayoutEngineNameVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.methodInputValidation(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>COMMA</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>COMMA</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>CURLYBRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>CURLYBRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>MINUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>WORD</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>WORD</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="81" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 54 -&gt; Only field: &quot;WebviewAppVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getConfidence</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getConfidence</name></method><methodDesc>()J</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getConfidence</name></method><methodDesc>()J</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="75" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 9 -&gt; Only field: &quot;OperatingSystemNameVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent$AgentField;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValueForced</name></method><methodDesc>(Ljava/lang/String;J)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>SEMICOLON</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>SEMICOLON</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>VALUE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>VALUENAME</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext</name></clazz><method><name>matcher</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="24" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>singleVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>base64</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$Base64Context;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>singleVersionWithCommas</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>productNameEmail</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>productNameKeyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>productNameUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>productNameUuid</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>productNameVersion</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext</name></clazz><method><name>productNameWords</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>GIBBERISH</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>VERSION</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>WORD</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>WORD</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>MINUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>VERSION</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>WORD</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>WORD</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>SLASH</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>SLASH</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>VERSION</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>WORD</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>WORD</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="62" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>GIBBERISH</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>MINUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>WORD</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>WORD</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>NUMBER</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>NUMBER</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>keyValue</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>rootText</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>MINUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>VERSION</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>WORD</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>WORD</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>COLON</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>COLON</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>EQUALS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>EQUALS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext</name></clazz><method><name>keyName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>BRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>BRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>NUMBER</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>NUMBER</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="8" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>MINUS</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>WORD</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>WORD</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>DOT</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>VALUENAME</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>numberRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>NUMBER</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getList</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>visitNumberRangeAll</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>visitNumberRangeEmpty</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>visitNumberRangeSingleValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>visitNumberRangeStartToEnd</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>NUMBER</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="38" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>CURLYBRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>CURLYBRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>URL</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>BRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>BRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>STAR</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>COMMA</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>VERSION</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>VERSION</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>CURLYBRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>CURLYBRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>WORD</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionSingleWordContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="22" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>STARTSWITH</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>VALUE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>NUMBER</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>ENDSWITH</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>VALUE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext</name></clazz><method><name>matcher</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>CURLYBRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>CURLYBRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>EMAIL</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="68" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext</name></clazz><method><name>matcher</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>CURLYBRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>CURLYBRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>UUID</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="63" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>EQUALS</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>VALUE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>BRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>BRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>NUMBER</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>BASE64</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>CURLYBRACECLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>CURLYBRACEOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$Base64Context</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>NOTEQUALS</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>VALUE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>BLOCKCLOSE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>BLOCKOPEN</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext</name></clazz><method><name>matcher</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>CONTAINS</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>VALUE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>COMMA</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>SEMICOLON</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$CommentSeparatorContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>NEXT</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>PREV</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>UP</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>VERSION</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>VERSION</name></method><methodDesc>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>SLASH</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext</name></clazz><method><name>productName</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="73" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>getFirst</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>getLast</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>matcher</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>BACKTOFULL</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext</name></clazz><method><name>wordRange</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext</name></clazz><method><name>path</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></clazz><method><name>VERSION</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></clazz><method><name>VERSION</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="65" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></clazz><method><name>MINUS</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$EmptyWordContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUrlContext</name></clazz><method><name>siteUrl</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$SiteUrlContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherBaseContext</name></clazz><method><name>matcher</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></clazz><method><name>VALUE</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameUuidContext</name></clazz><method><name>uuId</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$UuIdContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></clazz><method><name>emailAddress</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentParser$EmailAddressContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentParser$ProductNameEmailContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></clazz><method><name>basePath</name></method><methodDesc>()Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/debug/UserAgentAnalyzerTester;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder</name></clazz><method><name>hideMatcherLoadStats</name></method><methodDesc>()Lnl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder</name></clazz><method><name>showMatcherLoadStats</name></method><methodDesc>()Lnl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder</name></clazz><method><name>withAllFields</name></method><methodDesc>()Lnl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder</name></clazz><method><name>withCache</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder</name></clazz><method><name>withField</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder</name></clazz><method><name>withFields</name></method><methodDesc>(Ljava/util/Collection;)Lnl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsers.nl.basjes.parse.useragent.TestPredefinedBrowsers</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder</name></clazz><method><name>withoutCache</name></method><methodDesc>()Lnl/basjes/parse/useragent/debug/UserAgentAnalyzerTester$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 24 -&gt; Only field: &quot;AgentBuild&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>parseWalkerExpression</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser;)Lorg/antlr/v4/runtime/ParserRuleContext;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentLexer</name></clazz><method><name>getATN</name></method><methodDesc>()Lorg/antlr/v4/runtime/atn/ATN;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentLexer</name></clazz><method><name>getChannelNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentLexer</name></clazz><method><name>getGrammarFileName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentLexer</name></clazz><method><name>getModeNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentLexer</name></clazz><method><name>getRuleNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentLexer</name></clazz><method><name>getSerializedATN</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentLexer</name></clazz><method><name>getTokenNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentLexer</name></clazz><method><name>getVocabulary</name></method><methodDesc>()Lorg/antlr/v4/runtime/Vocabulary;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/NumberRangeList;Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="17" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerLexer</name></clazz><method><name>getATN</name></method><methodDesc>()Lorg/antlr/v4/runtime/atn/ATN;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerLexer</name></clazz><method><name>getChannelNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerLexer</name></clazz><method><name>getGrammarFileName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerLexer</name></clazz><method><name>getModeNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerLexer</name></clazz><method><name>getRuleNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerLexer</name></clazz><method><name>getSerializedATN</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerLexer</name></clazz><method><name>getTokenNames</name></method><methodDesc>()[Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerLexer</name></clazz><method><name>getVocabulary</name></method><methodDesc>()Lorg/antlr/v4/runtime/Vocabulary;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext</name></clazz><method><name>accept</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext</name></clazz><method><name>enterRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext</name></clazz><method><name>exitRule</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>calculateFixedValue</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>evaluate</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>evaluate</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>evaluate</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>getFixedValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>getWalkListForUnitTesting</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/WalkList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="13" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="64" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="40" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 23 -&gt; Only field: &quot;AgentNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.DocumentationExample.runDocumentationExample(nl.basjes.parse.useragent.DocumentationExample)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>get</name></method><methodDesc>(I)Ljava/lang/Integer;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeMultipleValues(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>get</name></method><methodDesc>(I)Ljava/lang/Integer;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeSingleValue(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>getEnd</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>getStart</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeSingleValue(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeSingleValue(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeSingleValue(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>getInstance</name></method><methodDesc>()Lnl/basjes/parse/useragent/utils/WordSplitter;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="88" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>getInstance</name></method><methodDesc>()Lnl/basjes/parse/useragent/utils/WordSplitter;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>isEndOfStringSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>isEndOfStringSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>isSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>isSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>getRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>visitWordRangeFirstWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>visitWordRangeLastWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>visitWordRangeSingleWord</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>visitWordRangeStartToEnd</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepIsNull</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepIsNull</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepIsNull</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepIsNull</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEndsWith</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEndsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEndsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEndsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepUp</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepUp</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepUp</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepUp</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepContains</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingRange(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepContains</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepContains</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepContains</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEquals</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepStartsWith</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepStartsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepStartsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepStartsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepNotEquals</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepNotEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepNotEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepNotEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/Version</name></clazz><method><name>getBuildTimestamp</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/Version</name></clazz><method><name>getGitCommitIdDescribeShort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/Version</name></clazz><method><name>getProjectVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$Match</name></clazz><method><name>getKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$Match</name></clazz><method><name>getResult</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$Match</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepBackToFull</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepBackToFull</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext</name></clazz><method><name>copyFrom</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext</name></clazz><method><name>copyFrom</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepFixedString</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepFixedString</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext</name></clazz><method><name>copyFrom</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepNormalizeBrand</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepNormalizeBrand</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext</name></clazz><method><name>copyFrom</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$GetAllPathsAnalyzer</name></clazz><method><name>getResult</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$GetAllPathsAnalyzer</name></clazz><method><name>getValues</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext</name></clazz><method><name>copyFrom</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepCleanVersion</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepCleanVersion</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext</name></clazz><method><name>copyFrom</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext</name></clazz><method><name>getRuleIndex</name></method><methodDesc>()I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable</name></clazz><method><name>iterator</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/DeviceClass</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/debug/FlattenPrinter</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Analyzer</name></clazz><method><name>getRequiredInformRanges</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
